import { FC, useEffect, useState } from "react";
import { TFilterActive, TFilterValues } from "../TYPE";

interface ISortAtoZ {
  activeFilter: TFilterActive["activeFilter"];
  countries: TFilterValues["countries"];
  sortClick: TFilterActive["sortClick"];
  setSortClick: TFilterActive["setSortClick"];
}

const SortAtoZ: FC<ISortAtoZ> = ({ sortClick, setSortClick, activeFilter }) => {
  const [sortActive, setSortActive] = useState("");
  const [svg, setSvg] = useState(false);

  function typeSort() {
    let nextClick = +sortClick + 1;

    if (nextClick === 1) {
      setSortActive("down");
    } else if (nextClick === 2) {
      setSortActive("up");
      setSvg(true);
    } else {
      setSortActive("");
      nextClick = 0;
      setSvg(false);
    }

    setSortClick(nextClick);
  }
  useEffect(() => {
    if (!activeFilter) {
      setSortActive("");
    }
  }, [activeFilter]);
  return (
    <>
      {svg ? (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 440.87 440.87"
          width="40"
          height="40"
          className={sortActive + " img-sorting"}
          onClick={() => typeSort()}
        >
          <path d="M19.605 17.483C19.605 7.867 27.473 0 37.089 0h148.608c6.993 0 13.404 4.079 16.026 10.781 2.622 6.411 1.457 13.987-3.497 18.94L78.174 154.436h107.522c9.616 0 17.483 7.867 17.483 17.483s-7.867 17.483-17.483 17.483H37.089c-6.993 0-13.404-4.079-16.026-10.781-2.622-6.411-1.457-13.987 3.497-18.94L144.611 34.967H37.089c-9.616 0-17.484-7.868-17.484-17.484zM6.201 414.645l90.33-163.76c3.205-5.536 9.324-9.033 15.735-9.033s12.238 3.788 15.152 9.616l83.046 163.76c4.371 8.742.874 19.232-7.576 23.602-2.622 1.166-5.245 2.04-7.867 2.04-6.411 0-12.53-3.497-15.735-9.616l-8.742-17.483H48.744c-.874 0-1.457 0-2.331-.291l-9.907 17.775c-4.662 8.45-15.444 11.656-23.894 6.993-8.159-4.663-11.073-15.153-6.411-23.603zm59.444-35.841h86.834l-41.668-82.171-45.166 82.171zm239.52 6.702c1.748.583 3.788.874 5.828.874 5.245 0 10.199-2.331 13.695-6.702l108.396-136.952c6.119-7.576 4.662-18.649-2.914-24.477-7.576-6.119-18.649-4.662-24.477 2.914l-77.218 97.615V75.761c0-9.616-7.867-17.483-17.483-17.483s-17.483 7.867-17.483 17.483v293.136c.001 7.576 4.663 13.987 11.656 16.609z" />
        </svg>
      ) : (
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 442.91 442.91"
          width="40"
          height="40"
          className={sortActive + " img-sorting"}
          onClick={() => typeSort()}
        >
          <path d="M13.98 196.395c8.45 4.662 19.232 1.457 23.894-6.993l9.907-17.775c.583 0 1.457.291 2.331.291h121.509l8.742 17.483c3.205 6.119 9.324 9.616 15.735 9.616 2.622 0 5.245-.583 7.867-2.04 8.742-4.371 11.947-14.861 7.576-23.602L128.495 9.616C125.581 3.788 119.753.292 113.343 0c-6.411 0-12.53 3.497-15.735 9.033l-90.33 163.76c-4.662 8.45-1.748 18.94 6.702 23.602zm98.198-141.614 41.668 82.171H66.721l45.457-82.171zM25.635 413.188l120.052-124.714H38.165c-9.616 0-17.483-7.867-17.483-17.483s7.867-17.483 17.483-17.483h148.608c6.993 0 13.404 4.079 16.026 10.781 2.622 6.411 1.457 13.987-3.497 18.94L79.251 407.943h107.522c9.616 0 17.483 7.867 17.483 17.483s-7.867 17.483-17.483 17.483H38.165c-6.993 0-13.404-4.079-16.026-10.781-2.914-6.41-1.457-13.695 3.496-18.94zm268.951-35.549V84.502c0-9.616 7.867-17.483 17.483-17.483s17.483 7.867 17.483 17.483V327.52l77.218-97.615c6.119-7.576 16.9-8.742 24.477-2.914 7.576 6.119 8.742 16.901 2.914 24.477L325.765 388.42c-3.497 4.371-8.45 6.702-13.695 6.702-2.04 0-3.788-.291-5.828-.874-6.993-2.623-11.656-9.033-11.656-16.609z" />
        </svg>
      )}
    </>
  );
};
export default SortAtoZ;
